// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String           @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime         @default(now())
  email        String           @unique
  name         String?
  address      Address?
  role         Role             @default(USER)
  groups       Group[]
  attatchments Attatchment[]
  posts        Post[]           @relation("author")
  preferences  userPreferences?
  password     String
  Comment      Comment[]
  birthday     DateTime?
}

// Address is an embedded document
type Address {
  street String
  city   String
  state  String
  zip    String
}

enum Role {
  USER
  ADMIN
}

model userPreferences {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  emailUpdates Boolean
  phoneUpdates Boolean
  userId       String  @unique @db.ObjectId
  user         User    @relation(fields: [userId], references: [id])
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  text      String
  authorId  String   @db.ObjectId
  author    User     @relation(fields: [authorId], references: [id])
  postId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
}

model Post {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  published    Boolean       @default(false)
  title        String
  content      String?
  authorId     String        @db.ObjectId
  author       User?         @relation("author", fields: [authorId], references: [id])
  attatchments Attatchment[]
  categoryIDs  String[]      @db.ObjectId
  categories   Category[]    @relation(fields: [categoryIDs], references: [id])
  userId       String[]      @db.ObjectId
  Comment      Comment[]
}

model Category {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  postIDs           String[] @db.ObjectId
  CategoriesOnPosts Post[]   @relation(fields: [postIDs], references: [id])
}

model Group {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  User        User?    @relation(fields: [userId], references: [id])
  userId      String[] @db.ObjectId
  categories  String[] @db.ObjectId
}

model Attatchment {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  data    Blob[]
  Post    Post?   @relation(fields: [postId], references: [id])
  postId  String? @db.ObjectId
  User    User?   @relation(fields: [userId], references: [id])
  userId  String? @db.ObjectId
  private Boolean @default(false)
}

model Blob {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  data          String
  Attatchment   Attatchment? @relation(fields: [attatchmentId], references: [id])
  attatchmentId String?      @db.ObjectId
}
